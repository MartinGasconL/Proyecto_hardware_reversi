   1              	# 1 "../patron_volteo_arm_arm.asm"
   1              	.global patron_volteo_arm_arm
   0              	
   0              	
   0              	
   2 0000 00000000 	espacio: .space 4
   3              	#r0 tablero
   4              	#r1 longitud
   5              	#r2 FA
   6              	#r3 CA
   7              	.arm
   8              	patron_volteo_arm_arm:
   9              		@r0-->@tablero
  10              		@r1-->@longitud
  11              		@r2-->FA
  12              		@r3-->CA
  13              		@r4-->SF
  14              		@r5-->SC
  15              		@r6-->color
  16              		@r7-->casilla
  17              		@r8-->auxiliar
  18              		@r9-->posicion_valida
  19              	
  20 0004 0DC0A0E1 		mov ip, sp							@Cargamos la direccion en pila de los parametros
  21 0008 F3432DE9 		stmfd sp!, {r0,r1,r4-r9, lr} 		@Salvamos el contexto y r0 y r1 para no perderlo en la llamada
  22              	
  23 000c 70009CE8 		ldmfd ip, {r4-r6}					@Cogemos valores de las variables
  24              	
  25 0010 042082E0 		add r2, r2, r4						@	FA = FA + SF
  26 0014 053083E0 		add r3, r3, r5						@	CA = CA + SC
  27              	
  28 0018 080052E3 		cmp r2, #8							@	|	FA < 8
  29 001c 0D0000AA 		bge else							@	|
  30              	
  31 0020 000052E3 		cmp r2, #0							@	|	FA >= 0
  32 0024 0B0000BA 		blt else							@	|
  33              	
  34 0028 080053E3 		cmp r3, #8							@	|	CA < 8
  35 002c 090000AA 		bge else							@	|
  36              	
  37 0030 000053E3 		cmp r3, #0							@	|	CA >= 0
  38 0034 070000BA 		blt else							@	|
  39              	
  40 0038 827183E0 		add r7, r3, r2, lsl #3				@	Posición del tablero r7 = r3 + r2 * 8
  41 003c 0770D0E7 		ldrb r7, [r0, r7] 					@	r7 = tablero[FA, CA]
  42              	
  43 0040 000057E3 		cmp r7, #0							@	|	tablero[FA, CA] != 0
  44 0044 0300000A 		beq else							@	|
  45              	
  46 0048 D0909FE5 		ldr r9, =espacio 					@	|	*posicion_valida = 1
  47 004c 0180A0E3 		mov r8, #1							@	|
  48 0050 008089E5 		str r8, [r9, #0]					@	|
  49              	
  50 0054 030000EA 		b end_if
  51              	else:
  52 0058 C0909FE5 		ldr r9, =espacio					@	|	*posicion_valida = 0
  53 005c 0080A0E3 		mov r8, #0							@	|
  54 0060 008089E5 		str r8, [r9, #0]					@	|
  55              	
  56 0064 0070A0E3 		mov r7, #0
  57              	
  58              	end_if:
  59              	
  60              	bucle:
  61 0068 009099E5 		ldr r9, [r9, #0]					@	|	*posicion_valida == 1
  62 006c 010059E3 		cmp r9, #1							@	|
  63 0070 1B00001A 		bne salir_bucle						@	|
  64              	
  65 0074 060057E1 		cmp r7, r6							@ 	|	si el color es igual, a tablero[FA, CA]
  66 0078 1900000A 		beq salir_bucle						@	|
  67              	
  68 007c 042082E0 		add r2, r2, r4						@	FA = FA + SF
  69 0080 053083E0 		add r3, r3, r5						@	CA = CA + SC
  70              	
  71 0084 007091E5 		ldr r7, [r1, #0]					@	|
  72 0088 017087E2 		add r7, r7, #1						@	|	longitud ++
  73 008c 007081E5 		str r7, [r1, #0]					@ 	|
  74              	
  75 0090 080052E3 		cmp r2, #8							@ 	|	FA < 8
  76 0094 0D0000AA 		bge else1							@	|
  77              	
  78 0098 000052E3 		cmp r2, #0							@ 	|	FA >= 0
  79 009c 0B0000BA 		blt else1							@	|
  80              	
  81 00a0 080053E3 		cmp r3, #8							@	|	CA < 8
  82 00a4 090000AA 		bge else1							@	|
  83              	
  84 00a8 000053E3 		cmp r3, #0							@	|	Ca >= 0
  85 00ac 070000BA 		blt else1							@	|
  86              	
  87 00b0 827183E0 		add r7, r3, r2, lsl #3				@	Posición del tablero r7 = r3 + r2 * 8
  88 00b4 0770D0E7 		ldrb r7, [r0, r7] 					@	r7 = tablero[FA, CA]
  89              	
  90 00b8 000057E3 		cmp r7, #0							@	|	r7 != 0
  91 00bc 0300000A 		beq else1							@	|
  92              	
  93 00c0 58909FE5 		ldr r9, =espacio 					@	|	posición valida* = 1
  94 00c4 0180A0E3 		mov r8, #1							@	|
  95 00c8 008089E5 		str r8, [r9, #0]					@	|
  96              	
  97 00cc 030000EA 		b end_if1
  98              	
  99              	else1:
 100              	
 101 00d0 48909FE5 		ldr r9, =espacio					@	|	posición valida* = 0
 102 00d4 0080A0E3 		mov r8, #0							@	|
 103 00d8 008089E5 		str r8, [r9, #0]					@	|
 104              	
 105 00dc 0070A0E3 		mov r7, #0
 106              	
 107              	end_if1:
 108 00e0 E0FFFFEA 		b bucle
 109              	
 110              	salir_bucle:
 111 00e4 34909FE5 		ldr r9, =espacio
 112 00e8 009099E5 		ldr r9, [r9]						@	Cargamos el contenido de posicion valida
 113              	
 114 00ec 010059E3 		cmp r9, #1							@	si la posicion no es valida
 115 00f0 0700001A 		bne no_patron						@
 116              	
 117 00f4 060057E1 		cmp r7, r6							@	Si la ultima ficha de patron_volteo no es igual a la inicial entonces no hay pa
 118 00f8 0500001A 		bne no_patron						@
 119              	
 120 00fc 007091E5 		ldr r7, [r1, #0]					@
 121 0100 000057E3 		cmp r7, #0							@	Si la longitud es menor o igual que 0 no hay patron
 122 0104 0200009A 		bls no_patron						@
 123              	
 124 0108 F343BDE8 		ldmia sp!, {r0,r1,r4-r9, lr} 		@	Recuperamos el contexto
 125 010c 0100A0E3 		mov r0, #1							@ 	Si he llegado hasta aqui es porque hay patron
 126 0110 1EFF2FE1 		bx lr								@	Volvemos a la siguiente instruccion a la de llamada a patron_volteo_arm
 127              	
 128              	no_patron:
 129              	
 130 0114 F343BDE8 		ldmia sp!, {r0,r1,r4-r9, lr} 	@Recuperamos el contexto
 131 0118 0000A0E3 		mov r0, #0
 132 011c 1EFF2FE1 		bx lr
 133              	
 134 0120 00000000 	.end
DEFINED SYMBOLS
../patron_volteo_arm_arm.asm:8      .text:00000004 patron_volteo_arm_arm
../patron_volteo_arm_arm.asm:2      .text:00000000 espacio
../patron_volteo_arm_arm.asm:2      .text:00000000 $d
../patron_volteo_arm_arm.asm:20     .text:00000004 $a
../patron_volteo_arm_arm.asm:51     .text:00000058 else
../patron_volteo_arm_arm.asm:58     .text:00000068 end_if
../patron_volteo_arm_arm.asm:60     .text:00000068 bucle
../patron_volteo_arm_arm.asm:110    .text:000000e4 salir_bucle
../patron_volteo_arm_arm.asm:99     .text:000000d0 else1
../patron_volteo_arm_arm.asm:107    .text:000000e0 end_if1
../patron_volteo_arm_arm.asm:128    .text:00000114 no_patron
../patron_volteo_arm_arm.asm:134    .text:00000120 $d
                   .debug_aranges:0000000c $d

NO UNDEFINED SYMBOLS
