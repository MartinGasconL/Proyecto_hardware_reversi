   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 2369              		.align	2
 2370              		.global	timer_ISR
 2372              	timer_ISR:
 2373              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    **** * Fichero:		timer.c
   3:../timer.c    **** * Autor:
   4:../timer.c    **** * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer.c    **** * Version:
   6:../timer.c    **** *********************************************************************************************/
   7:../timer.c    **** 
   8:../timer.c    **** /*--- ficheros de cabecera ---*/
   9:../timer.c    **** #include "timer.h"
  10:../timer.c    **** #include "44b.h"
  11:../timer.c    **** #include "44blib.h"
  12:../timer.c    **** #include "debug_stack.h"
  13:../timer.c    **** #include "jugada_por_pantalla.h"
  14:../timer.c    **** #include "pantalla_reversi.h"
  15:../timer.c    **** /*--- variables globales ---*/
  16:../timer.c    **** 
  17:../timer.c    **** /* declaración de función que es rutina de servicio de interrupción
  18:../timer.c    ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  19:../timer.c    **** void timer_ISR(void) __attribute__((interrupt("IRQ")));
  20:../timer.c    **** 
  21:../timer.c    **** int timer0_num_int;
  22:../timer.c    **** /*--- codigo de las funciones ---*/
  23:../timer.c    **** void timer_ISR(void)
  24:../timer.c    **** {
 2374              		.loc 1 24 0
 2375              		.cfi_startproc
 2376              		@ Interrupt Service Routine.
 2377              		@ args = 0, pretend = 0, frame = 0
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 04C02DE5 		str	ip, [sp, #-4]!
 2380 0004 0DC0A0E1 		mov	ip, sp
 2381              	.LCFI0:
 2382              		.cfi_def_cfa_register 12
 2383 0008 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2384 000c 04B04CE2 		sub	fp, ip, #4
 2385              		.cfi_offset 14, -8
 2386              		.cfi_offset 13, -12
 2387              		.cfi_offset 11, -16
 2388              		.cfi_offset 3, -20
 2389              		.cfi_offset 2, -24
 2390              		.cfi_offset 1, -28
 2391              		.cfi_offset 0, -32
 2392              	.LCFI1:
 2393              		.cfi_def_cfa 11, 4
  25:../timer.c    **** 	timer0_num_int++;
 2394              		.loc 1 25 0
 2395 0010 90309FE5 		ldr	r3, .L3
 2396 0014 003093E5 		ldr	r3, [r3, #0]
 2397 0018 012083E2 		add	r2, r3, #1
 2398 001c 84309FE5 		ldr	r3, .L3
 2399 0020 002083E5 		str	r2, [r3, #0]
  26:../timer.c    **** 	Latido_ev_new_tick();
 2400              		.loc 1 26 0
 2401 0024 FEFFFFEB 		bl	Latido_ev_new_tick
  27:../timer.c    **** 	if(timer0_num_int % 60 == 0 && estado_jugada_pantalla == PANTALLA_SELECCION){
 2402              		.loc 1 27 0
 2403 0028 78309FE5 		ldr	r3, .L3
 2404 002c 001093E5 		ldr	r1, [r3, #0]
 2405 0030 74309FE5 		ldr	r3, .L3+4
 2406 0034 9123C3E0 		smull	r2, r3, r1, r3
 2407 0038 013083E0 		add	r3, r3, r1
 2408 003c C322A0E1 		mov	r2, r3, asr #5
 2409 0040 C13FA0E1 		mov	r3, r1, asr #31
 2410 0044 022063E0 		rsb	r2, r3, r2
 2411 0048 0230A0E1 		mov	r3, r2
 2412 004c 0332A0E1 		mov	r3, r3, asl #4
 2413 0050 033062E0 		rsb	r3, r2, r3
 2414 0054 0331A0E1 		mov	r3, r3, asl #2
 2415 0058 012063E0 		rsb	r2, r3, r1
 2416 005c 000052E3 		cmp	r2, #0
 2417 0060 0600001A 		bne	.L2
 2418              		.loc 1 27 0 is_stmt 0 discriminator 1
 2419 0064 44309FE5 		ldr	r3, .L3+8
 2420 0068 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2421 006c 010053E3 		cmp	r3, #1
 2422 0070 0200001A 		bne	.L2
  28:../timer.c    **** 			push_debug(EVENTO_SEGUNDO, 1);
 2423              		.loc 1 28 0 is_stmt 1
 2424 0074 5500A0E3 		mov	r0, #85
 2425 0078 0110A0E3 		mov	r1, #1
 2426 007c FEFFFFEB 		bl	push_debug
 2427              	.L2:
  29:../timer.c    **** 		}
  30:../timer.c    **** 	realizar_trabajo_encolado();
 2428              		.loc 1 30 0
 2429 0080 FEFFFFEB 		bl	realizar_trabajo_encolado
  31:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupción*/
  32:../timer.c    **** 	rI_ISPC |= BIT_TIMER0; // BIT_TIMER0 está definido en 44b.h y pone un uno en el bit 13 que correpo
 2430              		.loc 1 32 0
 2431 0084 28309FE5 		ldr	r3, .L3+12
 2432 0088 24209FE5 		ldr	r2, .L3+12
 2433 008c 002092E5 		ldr	r2, [r2, #0]
 2434 0090 022A82E3 		orr	r2, r2, #8192
 2435 0094 002083E5 		str	r2, [r3, #0]
  33:../timer.c    **** }
 2436              		.loc 1 33 0
 2437 0098 1CD04BE2 		sub	sp, fp, #28
 2438 009c 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2439 00a0 04C09DE4 		ldmfd	sp!, {ip}
 2440 00a4 04F05EE2 		subs	pc, lr, #4
 2441              	.L4:
 2442              		.align	2
 2443              	.L3:
 2444 00a8 00000000 		.word	timer0_num_int
 2445 00ac 89888888 		.word	-2004318071
 2446 00b0 00000000 		.word	estado_jugada_pantalla
 2447 00b4 2400E001 		.word	31457316
 2448              		.cfi_endproc
 2449              	.LFE0:
 2451              		.align	2
 2452              		.global	timer_init
 2454              	timer_init:
 2455              	.LFB1:
  34:../timer.c    **** 
  35:../timer.c    **** void timer_init(void)
  36:../timer.c    **** {
 2456              		.loc 1 36 0
 2457              		.cfi_startproc
 2458              		@ Function supports interworking.
 2459              		@ args = 0, pretend = 0, frame = 0
 2460              		@ frame_needed = 1, uses_anonymous_args = 0
 2461 00b8 0DC0A0E1 		mov	ip, sp
 2462              	.LCFI2:
 2463              		.cfi_def_cfa_register 12
 2464 00bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2465 00c0 04B04CE2 		sub	fp, ip, #4
 2466              		.cfi_offset 14, -8
 2467              		.cfi_offset 13, -12
 2468              		.cfi_offset 11, -16
 2469              	.LCFI3:
 2470              		.cfi_def_cfa 11, 4
  37:../timer.c    **** 	timer0_num_int = 0;
 2471              		.loc 1 37 0
 2472 00c4 D4309FE5 		ldr	r3, .L6
 2473 00c8 0020A0E3 		mov	r2, #0
 2474 00cc 002083E5 		str	r2, [r3, #0]
  38:../timer.c    **** 	/* Configuraion controlador de interrupciones */
  39:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER0); 	// habilitamos en vector de mascaras de interrupcion el Timer0 (bits 26
 2475              		.loc 1 39 0
 2476 00d0 CC309FE5 		ldr	r3, .L6+4
 2477 00d4 C8209FE5 		ldr	r2, .L6+4
 2478 00d8 002092E5 		ldr	r2, [r2, #0]
 2479 00dc 022AC2E3 		bic	r2, r2, #8192
 2480 00e0 002083E5 		str	r2, [r3, #0]
  40:../timer.c    **** 
  41:../timer.c    **** 	/* Establece la rutina de servicio para TIMER0 */
  42:../timer.c    **** 	pISR_TIMER0 = (unsigned) timer_ISR;
 2481              		.loc 1 42 0
 2482 00e4 BC309FE5 		ldr	r3, .L6+8
 2483 00e8 BC209FE5 		ldr	r2, .L6+12
 2484 00ec 002083E5 		str	r2, [r3, #0]
  43:../timer.c    **** 
  44:../timer.c    **** 	/* Configura el Timer0 */
  45:../timer.c    **** 	rTCFG0 &= ~ 0xFF; 		// ajusta el preescalado
 2485              		.loc 1 45 0
 2486 00f0 B8309FE5 		ldr	r3, .L6+16
 2487 00f4 B4209FE5 		ldr	r2, .L6+16
 2488 00f8 002092E5 		ldr	r2, [r2, #0]
 2489 00fc FF20C2E3 		bic	r2, r2, #255
 2490 0100 002083E5 		str	r2, [r3, #0]
  46:../timer.c    **** 	rTCFG1 &= ~ 0xF;  		// |
 2491              		.loc 1 46 0
 2492 0104 A8309FE5 		ldr	r3, .L6+20
 2493 0108 A4209FE5 		ldr	r2, .L6+20
 2494 010c 002092E5 		ldr	r2, [r2, #0]
 2495 0110 0F20C2E3 		bic	r2, r2, #15
 2496 0114 002083E5 		str	r2, [r3, #0]
  47:../timer.c    **** 	rTCFG1 |= 0x4;			// | Ultimos 4 bits (1/2 -> 0) (1/4 -> 1) (1/8 -> 2) (1/16 -> 3) (1/32 -> 4).
 2497              		.loc 1 47 0
 2498 0118 94309FE5 		ldr	r3, .L6+20
 2499 011c 90209FE5 		ldr	r2, .L6+20
 2500 0120 002092E5 		ldr	r2, [r2, #0]
 2501 0124 042082E3 		orr	r2, r2, #4
 2502 0128 002083E5 		str	r2, [r3, #0]
  48:../timer.c    **** 	rTCNTB0 = 33333;		// valor inicial de cuenta (la cuenta es descendente)
 2503              		.loc 1 48 0
 2504 012c 84309FE5 		ldr	r3, .L6+24
 2505 0130 84209FE5 		ldr	r2, .L6+28
 2506 0134 002083E5 		str	r2, [r3, #0]
  49:../timer.c    **** 	rTCMPB0 = 0;			// valor de comparación
 2507              		.loc 1 49 0
 2508 0138 80309FE5 		ldr	r3, .L6+32
 2509 013c 0020A0E3 		mov	r2, #0
 2510 0140 002083E5 		str	r2, [r3, #0]
  50:../timer.c    **** 	
  51:../timer.c    **** 	/* establecer update=manual (bit 1) + inverter=on (¿? será inverter off un cero en el bit 2 pone e
  52:../timer.c    **** 	rTCON &= ~ 0xF;
 2511              		.loc 1 52 0
 2512 0144 78309FE5 		ldr	r3, .L6+36
 2513 0148 74209FE5 		ldr	r2, .L6+36
 2514 014c 002092E5 		ldr	r2, [r2, #0]
 2515 0150 0F20C2E3 		bic	r2, r2, #15
 2516 0154 002083E5 		str	r2, [r3, #0]
  53:../timer.c    **** 	rTCON |= 0x2;
 2517              		.loc 1 53 0
 2518 0158 64309FE5 		ldr	r3, .L6+36
 2519 015c 60209FE5 		ldr	r2, .L6+36
 2520 0160 002092E5 		ldr	r2, [r2, #0]
 2521 0164 022082E3 		orr	r2, r2, #2
 2522 0168 002083E5 		str	r2, [r3, #0]
  54:../timer.c    **** 	
  55:../timer.c    **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  56:../timer.c    **** 	rTCON &= ~ 0xF;
 2523              		.loc 1 56 0
 2524 016c 50309FE5 		ldr	r3, .L6+36
 2525 0170 4C209FE5 		ldr	r2, .L6+36
 2526 0174 002092E5 		ldr	r2, [r2, #0]
 2527 0178 0F20C2E3 		bic	r2, r2, #15
 2528 017c 002083E5 		str	r2, [r3, #0]
  57:../timer.c    **** 	rTCON |= 0x9;
 2529              		.loc 1 57 0
 2530 0180 3C309FE5 		ldr	r3, .L6+36
 2531 0184 38209FE5 		ldr	r2, .L6+36
 2532 0188 002092E5 		ldr	r2, [r2, #0]
 2533 018c 092082E3 		orr	r2, r2, #9
 2534 0190 002083E5 		str	r2, [r3, #0]
  58:../timer.c    **** }
 2535              		.loc 1 58 0
 2536 0194 0CD04BE2 		sub	sp, fp, #12
 2537 0198 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2538 019c 1EFF2FE1 		bx	lr
 2539              	.L7:
 2540              		.align	2
 2541              	.L6:
 2542 01a0 00000000 		.word	timer0_num_int
 2543 01a4 0C00E001 		.word	31457292
 2544 01a8 54FF7F0C 		.word	209715028
 2545 01ac 00000000 		.word	timer_ISR
 2546 01b0 0000D501 		.word	30736384
 2547 01b4 0400D501 		.word	30736388
 2548 01b8 0C00D501 		.word	30736396
 2549 01bc 35820000 		.word	33333
 2550 01c0 1000D501 		.word	30736400
 2551 01c4 0800D501 		.word	30736392
 2552              		.cfi_endproc
 2553              	.LFE1:
 2555              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
                            *COM*:00000001 estado_jugada_pantalla
                            *COM*:00000004 fila_pantalla
                            *COM*:00000004 columna_pantalla
                            *COM*:00000004 transferencia_completa
                            *COM*:00000004 timer0_num_int
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2369   .text:00000000 $a
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2372   .text:00000000 timer_ISR
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2444   .text:000000a8 $d
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2451   .text:000000b8 $a
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2454   .text:000000b8 timer_init
C:\Users\Martin\AppData\Local\Temp\ccaFgi1b.s:2542   .text:000001a0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Latido_ev_new_tick
push_debug
realizar_trabajo_encolado
