/*
 * boton_antirebotes.c
 *
 *  Created on: 02/11/2019
 *      Author: Martin Gascón y Eduardo Ruiz
 */

#include "boton_antirebotes.h"
#include "button.h"
#include "debug_stack.h"
#include "stdint.h"

Estado_button boton_pulsado;
uint32_t tiempo;
int contador_mantenido;
int tiempo_pulsacion;



void boton_antirebotes_inicializar(){
	tiempo = 0;
	contador_mantenido = 0;
	tiempo_pulsacion = 0;
	button_iniciar();
}

// Apila el evento de pulsación en la pila de eventos.
void button_down(){
	if(button_estado() == BUTTON_IZ){
		push_debug(EVENTO_IZ_BOTON_PULSADO, 1);
	}else if(button_estado() == BUTTON_DR){
		push_debug(EVENTO_DR_BOTON_PULSADO, 1);
	}
}

// Apila el evento de soltado de boton en la pila de eventos cuando el usuario depresiona el boton.
void button_up(Estado_button boton){

	if(boton == BUTTON_IZ){
		push_debug(EVENTO_IZ_BOTON_SOLTADO, 1);
	}else if(boton == BUTTON_DR){
		push_debug(EVENTO_DR_BOTON_SOLTADO, 1);
	}
}

//Controlador del boton antirebotes, será llamado cada 10 ms al procesar los eventos de reloj
void button_ev_tick1(){
	tiempo++;

	switch(estado_timer_button){

		//Estado inicial, el automata está parado hasta que se pulse el botón
		case INICIAL:
			contador_mantenido = 0;
			boton_pulsado = button_estado();
			if(boton_pulsado != BUTTON_NONE){
				estado_timer_button = REBOTES_SUBIDA;
			}else{
				timer1_parar();
				button_resetear();
			}
			break;

		//El automata espera a que terminen los rebotes de presión del botón
		case REBOTES_SUBIDA:
			if(tiempo >= TRP){
				estado_timer_button = BOTON_ESTABLE;
				button_down();
				tiempo = 0;
			}
			break;

		// Una vez pasado el tiempo de TRP el botón encuesta el estado del botón hasta que se suelta
		//Si se pulsa durante un tercio de segundo se generan nuevos eventos de pulsacion (Autoincremento)

		case BOTON_ESTABLE:
			tiempo_pulsacion++;
			//Contamos cuanto tiempo mantiene pulsado inicialmente el boton para disparar el autoincremento
			//salta en 1/3 de segundo, a partir de ese momento se mide el tiempo con la variable tiempo.
			if(tiempo_pulsacion >= TIEMPO_ESPERA_AUTOINCREMENTO && !contador_mantenido){
				contador_mantenido = 1;
				tiempo = 0;
			}


			if(tiempo >= TIEMPO_ENCUESTA){
				if(button_estado() != boton_pulsado){	//ya ha soltado el botón.
					button_up(boton_pulsado);
					contador_mantenido = 0;
					estado_timer_button = REBOTES_BAJADA;
					tiempo_pulsacion = 0;
				}else{
					//if(contador_mantenido)
					//	button_up(boton_pulsado);
				}
				tiempo = 0;
			}
			break;
		//El automata espera a que terminen los rebotes de depresión del botón
		case REBOTES_BAJADA:
			if(tiempo >= TRD){
				timer1_parar();
				button_resetear();
				estado_timer_button = INICIAL;
			}
			break;
	}
}


